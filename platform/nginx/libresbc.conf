##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

#############################################
##      REST API SERVER              ####
#############################################

# RATE LIMITER
# https://www.nginx.com/blog/rate-limiting-nginx
limit_req_zone $binary_remote_addr zone=purecodelimiter:10m rate=2r/s;
limit_req_zone $binary_remote_addr zone=restclientlimiter:10m rate=1r/s;

upstream uvicorn {
        server 127.0.0.1:8080;
}

server {
        # SSL configuration
        #
        listen {{interface.management.ip}}:{{interface.management.port}} ssl;
        # listen [::]:8443 ssl;
        #
        # Self signed certs generated by the ssl-cert package
        # Don't use them in a production server!
        #
        ssl_certificate /etc/nginx/selfsignedssl/fullchain.crt;
        ssl_certificate_key /etc/nginx/selfsignedssl/private.key;
        # include snippets/snakeoil.conf;
        #root /var/www/html;
        # Add index.php to the list if you are using PHP
        # index index.html index.htm index.nginx.html;

        server_name _;

        {% if interface.management.apis.cfgapi -%}
        location /cfgapi {
                limit_req zone=restclientlimiter burst=8 nodelay; 
                limit_req_status 429;   # 429 Too Many Requests (RFC 6585)
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
                # try_files $uri $uri/ =404;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header Host $http_host;
                proxy_pass_header Server;
                proxy_redirect off;
                proxy_connect_timeout 300;
                proxy_send_timeout 300;
                proxy_read_timeout 300;
                proxy_pass http://uvicorn;
        }
        {% endif %}

        {% if interface.management.apis.libreapi -%}
        location /libreapi {
                limit_req zone=restclientlimiter burst=8 nodelay; 
                limit_req_status 429;   # 429 Too Many Requests (RFC 6585)
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
                # try_files $uri $uri/ =404;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header Host $http_host;
                proxy_pass_header Server;
                proxy_redirect off;
                proxy_connect_timeout 300;
                proxy_send_timeout 300;
                proxy_read_timeout 300;
                proxy_pass http://uvicorn;
        }
        {% endif %}

        location ~ ^/(?!(libreapi|cfgapi)) {
                limit_req zone=purecodelimiter burst=1 nodelay; 
                limit_req_status 429;   # 429 Too Many Requests (RFC 6585)
                #auth_basic "Restricted Content";
                #auth_basic_user_file  /etc/nginx/.htpasswd;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header Host $http_host;
                proxy_pass_header Server;
                proxy_redirect off;
                proxy_buffers 16 4k;
                proxy_buffer_size 2k;
                proxy_connect_timeout 60;
                proxy_send_timeout 60;
                proxy_read_timeout 60;
                proxy_pass http://uvicorn;
        }

        location /.well-known {
		    alias /var/www/.well-known;
 	}
}
