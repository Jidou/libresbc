<include>
  <context name="outside">
    <!-- In the middle of a call if one side puts the other one on hold a re-invite will occur and a new codec negotiation will happen. 
    There's cases where you need to keep the same codec previously negotiated when the call was answered. -->
    <extension name="lock_codec">
      <condition field="destination_number" expression="^lock_codec$">
        <action application="set" data="absolute_codec_string=${rtp_use_codec_name}"/>
      </condition>
    </extension>
    <!-- START: INCOMING CALL PROCESSING -->
    <extension name="outside_to_inside">
      <condition regex="all">
        <regex field="${acl(${network_addr} INBOUND_PEER_ACL)}" expression="true"/>
        <action application="log" data="Incoming Request [${context}:${direction}:${sip_req_uri}]"/>
        <!--
        <action application="answer"/>
        <action application="sleep" data="1000"/>
        <action application="playback" data="/tmp/ulaw08m.wav"/>
        <action application="hangup"/>
        -->
        <!-- MOD_LUA: ln -snf /usr/libresbc/run/luaplan/* /usr/local/share/freeswitch/scripts/ -->
        <action application="lua" data="/usr/libresbc/run/luaplan/main.lua"/>
        <!-- ESL EVENT SOCKET LIBRARY -->
        <!-- <action application="socket" data="127.0.0.1:8088 async full"/> -->
        <!-- Reject other calls that do not fufil inbound criteria as default -->
        <anti-action application="hangup" data="CALL_REJECTED"/>
      </condition>
    </extension>
    <!-- END: INCOMING CALL PROCESSING -->
  </context>
</include>