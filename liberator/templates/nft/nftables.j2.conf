#!/usr/sbin/nft -f
# https://cryptsus.com/blog/setting-up-nftables-firewall.html
# https://github.com/krabelize/nftables-firewall-config/blob/master/nftables.conf
# https://blog.cloudflare.com/how-to-drop-10-million-packets
# https://github.com/cloudflare/cloudflare-blog

flush ruleset

table inet LIBREFW {
	chain INCOMING {
		# type filter hook prerouting priority 0; policy drop;
		type filter hook input priority 0; policy drop;
		    iifname lo accept
			iifname lo ip saddr != 127.0.0.0/8 counter drop
			iifname lo ip6 saddr != ::1/128 counter drop
			iifname != lo ip daddr 127.0.0.0/8 counter drop

			ct state invalid counter drop comment "early drop of invalid packets"
			ct state {established, related} counter accept
			#---------------------------------------------------------------------
			define RTPPORTS = { {{rtpportrange|join('-')}} }
			#---------------------------------------------------------------------
			{%- for name, data in sipprofiles.items() %}
			# TRAFFIC FILTER PER SIP PROFILE - {{name|upper}}
			define FESIP{{loop.index}} = { {{data.farendsipaddrs}} }
			define FERTP{{loop.index}} = { {{data.farendrtpaddrs}} }
			tcp dport { {{data.siptcpports|join(',')}} } ip saddr $FESIP{{loop.index}} ip daddr {{data.sip_ip}} counter accept
			udp dport { {{data.sipudpports|join(',')}} } ip saddr $FESIP{{loop.index}} ip daddr {{data.sip_ip}} counter accept
			udp dport $RTPPORTS ip saddr $FERTP{{loop.index}} ip daddr {{data.rtp_ip}} counter accept
			{%- endfor %}
			#---------------------------------------------------------------------
			# PRECONFIGURED FIREWALL
			include "*.libre.nft"
			#---------------------------------------------------------------------
			tcp dport 22 ip saddr 0.0.0.0/0 counter accept
			# accept neighbour discovery otherwise connectivity breaks
			#icmpv6 type { nd-neighbor-solicit, echo-request, nd-router-advert, nd-neighbor-advert } counter accept
			icmp type echo-request limit rate 1/second counter accept

			# count and drop any other traffic
			counter drop
	}
	chain OUTGOING {
		type filter hook output priority 0;
	}
	chain TRANSFER {
		type filter hook forward priority 0; policy drop;
	}
}
