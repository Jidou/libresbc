#!KAMAILIO
## --------------------------------------------------------------------------------------------------------------------------------
#!define BRANCH_NATOUT_FLAG 6
#!define BRANCH_NATSIPPING_FLAG 7
#!define LIBRE_USER_LOCATION 'LIBREUSRLOC'

## --------------------------------------------------------------------------------------------------------------------------------
log_name = '{{layer}}'

debug=2
log_stderror=no
memdbg=5
memlog=5
latency_cfg_log=2
latency_log=2
latency_limit_action=100000
latency_limit_db=200000
log_facility=LOG_LOCAL5

fork=yes
children=8

{% if 'tcp' in kamcfgs.transports or 'tls' in kamcfgs.transports %}
tcp_connect_timeout=5
tcp_send_timeout=2
# life time of TCP connection when there is no traffic a bit higher than registration expires to cope with UA behind NAT
tcp_connection_lifetime=3605
tcp_accept_no_cl=yes
tcp_rd_buf_size=16384
{% else %}
disable_tcp=yes
{% endif %}

{% if 'tcp' in kamcfgs.transports %}
listen=tcp:{{kamcfgs.listen}}:{{kamcfgs.sip_port}} advertise {{kamcfgs.advertise}}:{{kamcfgs.sip_port}}
{% endif %}

{% if 'tls' in kamcfgs.transports %}
enable_tls=yes
listen=tls:{{kamcfgs.listen}}:{{kamcfgs.sips_port}} advertise {{kamcfgs.advertise}}:{{kamcfgs.sips_port}}
{% endif %}

{% if 'udp' in kamcfgs.transports %}
listen=udp:{{kamcfgs.listen}}:{{kamcfgs.sip_port}} advertise {{kamcfgs.advertise}}:{{kamcfgs.sip_port}}
{% endif %}

# disable the auto discovery of local aliases based on reverse DNS on IPs (default on)
auto_aliases=no
# add local domain aliases
{% for domain in kamcfgs.domains %}
alias="{{domain}}"
{% endfor %}

# INTERNAL COMUNICATE INTERFACE
{% for _, sockets in kamcfgs.policies.items() -%}
listen={{sockets.srcsocket.transport}}:{{sockets.srcsocket.ip}}:{{sockets.srcsocket.port}}
{% endfor %}

# server header
server_header="Server: {{kamcfgs.server_header}}"

## --------------------------------------------------------------------------------------------------------------------------------
loadpath "/usr/local/lib64/kamailio/modules"
loadmodule "jsonrpcs.so"
loadmodule "ctl.so"
loadmodule "kex.so"
loadmodule "corex.so"
loadmodule "tm.so"
loadmodule "tmx.so"
loadmodule "outbound"
loadmodule "sl.so"
loadmodule "rr.so"
loadmodule "pv.so"
loadmodule "dialog.so"
loadmodule "maxfwd.so"
loadmodule "usrloc.so"
loadmodule "registrar.so"
loadmodule "textops.so"
loadmodule "textopsx.so"
loadmodule "siputils.so"
loadmodule "sanity.so"
loadmodule "uac.so"
loadmodule "kemix.so"
loadmodule "auth.so"
loadmodule "nathelper.so"
{% if 'tls' in kamcfgs.transports %}
loadmodule "tls.so"
{% endif %}
loadmodule "debugger.so"
loadmodule "htable.so"
loadmodule "pike.so"
loadmodule "app_lua.so"
loadmodule "xlog.so"

## --------------------------------------------------------------------------------------------------------------------------------
# ------ RPC interface over JSON-RPC ------
modparam("jsonrpcs", "pretty_format", 1)
modparam("jsonrpcs", "fifo_name", "/run/kamailio/{{layer}}.rpc.fifo")
modparam("jsonrpcs", "dgram_socket", "/run/kamailio/{{layer}}.rpc.sock")
modparam("ctl", "binrpc", "unix:/run/kamailio/{{layer}}.ctl")

# ------ Stateful Processing of SIP Transactions -----
# auto-discard branches from previous serial forking leg
modparam("tm", "failure_reply_mode", 3)
# default retransmission timeout: 30sec
modparam("tm", "fr_timer", 30000)
# default invite retransmission timeout after 1xx: 120sec
modparam("tm", "fr_inv_timer", 120000)
modparam("tm", "auto_inv_100_reason", "{{kamcfgs.trying_reason}}")

# ---- Record Routing Logic -----
modparam("rr", "enable_full_lr", 1)
modparam("rr", "append_fromtag", 1)
modparam("rr", "force_send_socket", 1)

modparam("pv", "varset", "pstngw=s:sip:10.10.10.10")

# ---- stateful dialog state (not just transaction state by rr) ----
modparam("dialog", "db_mode", 0)

# ----- User Location -----
modparam("usrloc", "preload", LIBRE_USER_LOCATION)
modparam("usrloc", "db_mode", 0)
modparam("usrloc", "hash_size", 16)
modparam("usrloc", "use_domain", 1)

# ----- Register processing logic, location managed by the usrloc -----
# modparam("registrar", "method_filtering", 0)
/* allow only 1 contacts per AOR */
modparam("registrar", "max_contacts", 1)
# value for expires of registrations
modparam("registrar", "max_expires", 3600)
modparam("registrar", "min_expires", 300)

# ----- nathelper params -----
modparam("nathelper", "natping_interval", 300)
modparam("nathelper", "ping_nated_only", 1)
modparam("nathelper", "sipping_bflag", BRANCH_NATSIPPING_FLAG)
modparam("nathelper", "sipping_from", "{{kamcfgs.natping_from}}")

# params needed for NAT traversal in other modules
modparam("nathelper|registrar", "received_avp", "$avp(RECEIVED)")
modparam("usrloc", "nat_bflag", BRANCH_NATOUT_FLAG)

# ----- tls params -----
{% if 'tls' in kamcfgs.transports %}
modparam("tls", "config", "/usr/local/etc/kamailio/{{layer}}.tls.cfg")
{% endif %}

# ----- debugger params -----
modparam("debugger", "cfgtrace", 1)

# ----- pike anti-flooding -----
modparam("pike", "sampling_time_unit", 2)
modparam("pike", "reqs_density_per_unit", 16)
modparam("pike", "remove_latency", 4)
# ----- shared memory hash table -----
# ip ban htable with autoexpire after 10 minutes
modparam("htable", "htable", "ipban=>size=8;autoexpire=600;")

# ----- LUA ROUTING ENGINE -----
modparam("app_lua", "load", "/usr/local/share/lua/5.2/callng/kami.lua")
cfgengine "lua"
