#!KAMAILIO
## --------------------------------------------------------------------------------------------------------------------------------
#!define BRANCH_NATOUT_FLAG 6
#!define BRANCH_NATSIPPING_FLAG 7
#!define LIBRE_USER_LOCATION 'LIBREUSRLOC'
## --------------------------------------------------------------------------------------------------------------------------------
log_name = '{{layer}}'
server_header="Server: {{kamcfgs.server_header}}"
debug=2
log_stderror=no
memdbg=5
memlog=5
latency_cfg_log=2
latency_log=2
latency_limit_action=100000
latency_limit_db=200000
log_facility=LOG_LOCAL5
fork=yes
children=8

auto_aliases=no
{% for domain in kamcfgs.domains -%}
alias="{{domain}}"
{% endfor %}

{%- if 'tcp' in kamcfgs.transports or 'tls' in kamcfgs.transports %}
tcp_connect_timeout=5
tcp_send_timeout=2
tcp_connection_lifetime=3605
tcp_accept_no_cl=yes
tcp_rd_buf_size=16384
{%- else %}
disable_tcp=yes
{% endif %}

{% if 'tcp' in kamcfgs.transports %}
listen=tcp:{{kamcfgs.listen}}:{{kamcfgs.sip_port}} advertise {{kamcfgs.advertise}}:{{kamcfgs.sip_port}}
{% endif %}
{%- if 'tls' in kamcfgs.transports -%}
enable_tls=yes
listen=tls:{{kamcfgs.listen}}:{{kamcfgs.sips_port}} advertise {{kamcfgs.advertise}}:{{kamcfgs.sips_port}}
{% endif %}
{%- if 'udp' in kamcfgs.transports -%}
listen=udp:{{kamcfgs.listen}}:{{kamcfgs.sip_port}} advertise {{kamcfgs.advertise}}:{{kamcfgs.sip_port}}
{% endif %}

{%- for _, sockets in kamcfgs.policies.items() %}
listen={{sockets.srcsocket.transport}}:{{sockets.srcsocket.ip}}:{{sockets.srcsocket.port}}
{% endfor %}
## --------------------------------------------------------------------------------------------------------------------------------
loadpath "/usr/local/lib64/kamailio/modules"
## --------------------------------------------------------------------------------------------------------------------------------
## RPC INTERFACE OVER JSON-RPC
loadmodule "jsonrpcs.so"
modparam("jsonrpcs", "pretty_format", 1)
modparam("jsonrpcs", "fifo_name", "{{piddir}}/{{layer}}.rpc.fifo")
modparam("jsonrpcs", "dgram_socket", "{{piddir}}/{{layer}}.rpc.sock")
## --------------------------------------------------------------------
loadmodule "ctl.so"
modparam("ctl", "binrpc", "unix:{{piddir}}/{{layer}}.ctl")
## --------------------------------------------------------------------
loadmodule "kex.so"
loadmodule "corex.so"
loadmodule "pv.so"
loadmodule "maxfwd.so"
loadmodule "outbound"
loadmodule "sl.so"
## --------------------------------------------------------------------
## STATEFULL PROCESSING SIP TRANSACTION
loadmodule "tm.so"
loadmodule "tmx.so"
modparam("tm", "failure_reply_mode", 3)                                 # auto-discard branches from previous serial forking leg
modparam("tm", "fr_timer", 30000)                                       # default retransmission timeout: 30sec
modparam("tm", "fr_inv_timer", 120000)                                  # default invite retransmission timeout after 1xx: 120sec
modparam("tm", "auto_inv_100_reason", "{{kamcfgs.trying_reason}}")
## --------------------------------------------------------------------
## RECORD ROUTE LOGIC
loadmodule "rr.so"
modparam("rr", "enable_full_lr", 1)
modparam("rr", "append_fromtag", 1)
modparam("rr", "force_send_socket", 1)
## --------------------------------------------------------------------
## STATEFUL PROCESSING SIP DIALOG
loadmodule "dialog.so"
modparam("dialog", "db_mode", 0)
## --------------------------------------------------------------------
## USER LOCATION
loadmodule "usrloc.so"
modparam("usrloc", "preload", LIBRE_USER_LOCATION)
modparam("usrloc", "db_mode", 0)
modparam("usrloc", "hash_size", 16)
modparam("usrloc", "use_domain", 1)
modparam("usrloc", "nat_bflag", BRANCH_NATOUT_FLAG)
## --------------------------------------------------------------------
## REGISTER PROCESSING LOGIC
loadmodule "registrar.so"
#modparam("registrar", "method_filtering", 0)
modparam("registrar", "max_contacts", 1)
modparam("registrar", "max_expires", 3600)
modparam("registrar", "min_expires", 300)
modparam("registrar", "received_avp", "$avp(RECEIVED)")
## --------------------------------------------------------------------
loadmodule "textops.so"
loadmodule "textopsx.so"
loadmodule "siputils.so"
loadmodule "sanity.so"
loadmodule "uac.so"
loadmodule "kemix.so"
loadmodule "auth.so"
## --------------------------------------------------------------------
## NAT HELPER MODULE
loadmodule "nathelper.so"
modparam("nathelper", "natping_interval", 300)
modparam("nathelper", "ping_nated_only", 1)
modparam("nathelper", "sipping_bflag", BRANCH_NATSIPPING_FLAG)
modparam("nathelper", "sipping_from", "{{kamcfgs.natping_from}}")
modparam("nathelper", "received_avp", "$avp(RECEIVED)")
{%- if 'tls' in kamcfgs.transports %}
## --------------------------------------------------------------------
## TLS
loadmodule "tls.so"
modparam("tls", "config", "{{cfgdir}}/{{layer}}.tls.cfg")
{% endif %}
## --------------------------------------------------------------------
## DEBUGER
loadmodule "debugger.so"
modparam("debugger", "cfgtrace", 1)
## --------------------------------------------------------------------
## PIKE ANTI-FLOODING
loadmodule "pike.so"
modparam("pike", "sampling_time_unit", 2)
modparam("pike", "reqs_density_per_unit", 16)
modparam("pike", "remove_latency", 4)
## --------------------------------------------------------------------
## SHARED MEMORY HASH TABLE
loadmodule "htable.so"
modparam("htable", "htable", "ipban=>size=8;autoexpire=600;")
## --------------------------------------------------------------------
loadmodule "xlog.so"
## --------------------------------------------------------------------
## LUA ROUTING ENGINE
loadmodule "app_lua.so"
modparam("app_lua", "load", "/usr/local/share/lua/5.2/callng/kami.lua")
modparam("app_lua", "load", "{{cfgdir}}/{{layer}}.lua")
cfgengine "lua"
